apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapi-deploy    # 디플로이 리소스 이름
spec:
  selector:
    matchLabels:
      app: fastapi         # ← 이 값이 중요한 포인트 (서비스와 연결됨)
  template:
    metadata:
      labels:
        app: fastapi       # ← 이게 실제 Pod에 붙는 라벨 (↑selector와 반드시 일치해야 연결됨)
    spec:
      containers: # 네임은 리스트형식
        - name: fastapi-service # pod안에 여러 컨테이너를 정의 가능하기때문
          image: ghcr.io/ajh9789/fastapi_service:latest  # ← 이건 DockerHub이므로 언더스코어 OK
          imagePullPolicy: Always
          #포트
          ports:
            - containerPort: 8000
          #커맨드
          command: [ "uvicorn" ]
          args: [ "fastapi_service:app", "--host", "0.0.0.0", "--port", "8000" ]
          #환경
          envFrom:
            - configMapRef:
                name: whisper-config
            - secretRef:
                name: whisper-secret
          env:
            - name: REDIS_HOST
              value: redis
          #이 Pod이 아직 살아있는지 검사 실패하면 자동으로 Pod를 재시작
          livenessProbe:
            httpGet:
              path: /
              port: 8000
            initialDelaySeconds: 10
            periodSeconds: 10
            failureThreshold: 3
          #이 Pod이 서비스 받을 준비가 됐는지 검사 실패하면 서비스 트래픽을 안 보냄 (endpoints에서 제외됨)
          readinessProbe:
            httpGet:
              path: /status
              port: 8000
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 2
