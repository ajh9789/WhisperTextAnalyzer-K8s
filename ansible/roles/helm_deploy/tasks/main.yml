- name: Helm 설치 여부 확인
  command: helm version   # Helm 설치 여부 확인
  register: helm_output   # 결과를 helm_output 변수에 저장
  changed_when: false     # 이 작업은 상태 변경으로 간주하지 않음 (Always OK)
  failed_when: false      # Helm이 없어서 실패해도 에러로 처리하지 않음
  become: true            # sudo 권한으로 실행 (중요)

- name: Helm 설치 안 되어 있으면 설치 # Helm이 없을 때만 실행
  shell: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
  when: helm_output.rc is defined and helm_output.rc != 0   
  become: true  # 설치 명령은 sudo 필요

- name: Helm Chart 디렉토리 복사  # Helm 차트를 원격 서버의 /tmp 경로로 복사
  copy:
    src: roles/helm_deploy/files/app-chart   # 복사할 로컬 디렉토리 (플레이북 기준 상대 경로)
    dest: /tmp/app-chart                     # 복사 대상 경로 (원격 서버의 임시 디렉토리)
    mode: '0755'                             # 복사된 디렉토리의 권한 설정 (rwxr-xr-x)
  when: not (ansible_local.helm_chart is defined and ansible_local.helm_chart.done | bool)
    # 조건: ansible_local.helm_chart.done 값이 정의되어 있고 true면 건너뜀 (이미 복사 완료된 경우)
  become: true                               # root 권한으로 복사 수행 (권한 오류 방지)
  register: helm_chart_copy                  # 복사 작업 결과를 helm_chart_copy 변수에 저장

- name: 체크포인트 저장 (복사 완료 상태 기록)  # Helm Chart 복사가 처음 완료되었을 때 상태를 기록
  copy:
    content: '{"done": true}'                 # 커스텀 fact 파일 내용 (JSON 형식)
    dest: /etc/ansible/facts.d/helm_chart.fact  # 저장 위치 (Ansible이 자동 인식하는 facts 디렉토리)
  when: helm_chart_copy.changed              # 복사가 실제로 발생한 경우에만 상태 기록

- name: Helm Chart 배포     # Helm Chart 설치 또는 업그레이드
  command: helm upgrade --install myrelease ./app-chart -n default 
  args:    # Chart가 위치한 디렉토리로 이동
    chdir: /tmp/app-chart  
  become: true   # 배포도 root 권한 필요                                     
  environment:  # Helm이 연결할 Kubernetes 클러스터의 인증 정보를 명확히 지정
    KUBECONFIG: /home/{{ ansible_user }}/.kube/config